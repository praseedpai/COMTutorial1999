//
//
//   IDL Script for IExpression  interface 
//  
//  Following id has been  generated by  the GUIDGEN utility 
//
//  {5A774B31-2F6B-11d3-A53E-0040056DF87F}  => GUID for  IExpression     interface
//  {5A774B32-2F6B-11d3-A53E-0040056DF87F} =>  GUID for  Object which implements IExpression 
//  {5A774B33-2F6B-11d3-A53E-0040056DF87F} =>  GUID for  Type Library
//
//   Note: =
//              if you have got  N  interfaces to be implemented ( imagine one object implements a single 
//              interface  ) then you should create    2N+1  GUID's 
//              [ Iunknown is not treated as interface here ]
//              
//   Compile at Command Prompt  using following Command Line
//
//   MIDL  /char signed   EvalExpr.idl 
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//----- include defenition for iunknown interface

import "unknwn.idl"; 

typedef [ helpstring("Result Types") ] 
enum {
  DOUBLE_VAL =1 ,   // Double Precision floating point value
  STR_VAL    =2 ,   // Literal String
  ILLEGAL_VAL = 4   // Syntax Error
}RESULTTYPE;
   
  


//These are the attributes of the IExpression  interface

[
	object,
	uuid(5A774B31-2F6B-11d3-A53E-0040056DF87F),
	helpstring("IExpression   Interface.")
]

interface IExpression  : IUnknown
{
      HRESULT   SetExpr(  [in ]   LPSTR   expr_str );
      HRESULT   Evaluate( [ in , out]  LONG  *result_type ); 	
      HRESULT   EvaluateImmediate( [ in ] LPSTR expr_str , [ in , out ] LONG *result_type );
      HRESULT   GetStringValue( [in,out] LPSTR result_str );
      HRESULT   GetDoubleValue( [in,out] double *result_str );
      HRESULT   GetError( [ in , out] LPSTR error_str );
      HRESULT   DummyFunc( [in,out] RESULTTYPE *lpt );
}

//These are the attributes of the type library 

[
	uuid(5A774B33-2F6B-11d3-A53E-0040056DF87F),
	helpstring("Expression Evaluator  Type Library."),
	version(1.0)
]

library EvalExpr 
{

	[
		uuid(5A774B32-2F6B-11d3-A53E-0040056DF87F),
		helpstring("Expression Evaluator")
	]

	coclass Expression 
	{
		//List all of the interfaces supported by the object
		[default] interface IExpression;
	}


	

}

// EOF 
